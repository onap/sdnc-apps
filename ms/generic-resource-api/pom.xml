<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.onap.ccsdk.parent</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0-SNAPSHOT</version>
    </parent>

    <groupId>org.onap.sdnc.apps</groupId>
    <artifactId>generic-resource-api</artifactId>
    <version>2.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>sdnc-apps :: ms :: ${project.artifactId}</name>
    <description>POM to be used for yang2swagger generation of client in SDNC project</description>
    <url>http://wiki.onap.org</url>

    <properties>
        <start-class>org.onap.sdnc.apps.ms.gra.GenericResourceMsApp</start-class>
        <shiro.version>1.5.0</shiro.version>
        <aaf-shiro-bundle.version>2.1.13</aaf-shiro-bundle.version>
        <ccsdk.apps.version>1.1.0-SNAPSHOT</ccsdk.apps.version>
        <ccsdk.docker.version>1.1-STAGING-latest</ccsdk.docker.version>
        <sdnc.northbound.version>2.1.0-SNAPSHOT</sdnc.northbound.version>
        <sdnc.oam.version>2.1.0-SNAPSHOT</sdnc.oam.version>

        <base.image.name>onap/ccsdk-alpine-j11-image</base.image.name>
        <image.name>onap/sdnc-gra-image</image.name>
        <ccsdk.project.version>${project.version}</ccsdk.project.version>
        <ccsdk.build.timestamp>${maven.build.timestamp}</ccsdk.build.timestamp>
        <maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
        <sdnc.gra.jar>${project.artifactId}-${project.version}.jar</sdnc.gra.jar>
        <docker.push.phase>deploy</docker.push.phase>
        <docker.verbose>true</docker.verbose>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring-boot-web-starter</artifactId>
            <version>${shiro.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.onap.aaf.cadi</groupId>
            <artifactId>aaf-cadi-shiro</artifactId>
            <version>${aaf-shiro-bundle.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
          </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.apps</groupId>
            <artifactId>services</artifactId>
            <version>${ccsdk.apps.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.apps</groupId>
            <artifactId>sliboot</artifactId>
            <version>${ccsdk.apps.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.sli.core</groupId>
            <artifactId>sli-common</artifactId>
            <version>${ccsdk.sli.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.sli.core</groupId>
            <artifactId>sli-provider-base</artifactId>
            <version>${ccsdk.sli.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.logging-analytics</groupId>
            <artifactId>logging-filter-spring</artifactId>
            <version>1.6.6</version>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.sli.core</groupId>
            <artifactId>sliPluginUtils-provider</artifactId>
            <version>${ccsdk.sli.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.sli.adaptors</groupId>
            <artifactId>mdsal-resource-provider</artifactId>
            <version>${ccsdk.sli.adaptors.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.sli.adaptors.messagerouter</groupId>
            <artifactId>publisher.provider</artifactId>
            <version>${ccsdk.sli.adaptors.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.sli.adaptors</groupId>
            <artifactId>netbox-client-provider</artifactId>
            <version>${ccsdk.sli.adaptors.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.sli.adaptors</groupId>
            <artifactId>sql-resource-provider</artifactId>
            <version>${ccsdk.sli.adaptors.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.sli.plugins</groupId>
            <artifactId>restapi-call-node-provider</artifactId>
            <version>${ccsdk.sli.plugins.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.ccsdk.sli.plugins</groupId>
            <artifactId>properties-node-provider</artifactId>
            <version>${ccsdk.sli.plugins.version}</version>
        </dependency>

        <!-- this jersey jar is needed for rest api call node to function properly -->
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Necessary to run tests with coverage in IntelliJ -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.6.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>${basedir}/../../TagVersion.groovy</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>

                <executions>
                    <execution>
                        <id>get-gra-yaml</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.onap.sdnc.northbound</groupId>
                                    <artifactId>generic-resource-api-model-swagger</artifactId>
                                    <version>${sdnc.northbound.version}</version>
                                    <type>yaml</type>
                                    <outputDirectory>${project.build.directory}/yaml</outputDirectory>
                                    <destFileName>generic-resource.yaml</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <!-- DGs are needed for unit tests as well -->
                    <execution>
                        <id>unpack dgs</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.onap.sdnc.oam</groupId>
                                    <artifactId>platform-logic-installer</artifactId>
                                    <version>${sdnc.oam.version}</version>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <output>target/generated-sources</output>
                            <inputSpec>${project.build.directory}/yaml/generic-resource.yaml</inputSpec>
                            <language>spring</language>
                            <apiPackage>org.onap.sdnc.apps.ms.gra.swagger</apiPackage>
                            <modelPackage>org.onap.sdnc.apps.ms.gra.swagger.model</modelPackage>
                            <invokerPackage>org.onap.sdnc.apps.ms.gra.swagger</invokerPackage>
                            <generateApis>true</generateApis>
                            <generateApiTests>true</generateApiTests>
                            <ignoreFileOverride>${project.basedir}/.swagger-codegen-ignore</ignoreFileOverride>
                            <withXml>true</withXml>
                            <templateDirectory>${project.basedir}/src/main/templates</templateDirectory>
                            <configOptions>
                                <java8>true</java8>
                                <springBootVersion>2.2.4-RELEASE</springBootVersion>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>addSource</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/target/generated-sources/src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.10</version>

                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <excludeTransitive>true</excludeTransitive>
                                    <outputDirectory>${project.build.directory}/docker-stage/opt/onap/sdnc/lib</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                    <useRepositoryLayout>false</useRepositoryLayout>
                                    <addParentPoms>false</addParentPoms>
                                    <copyPom>false</copyPom>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-dockerfile</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals><!-- here the phase you need -->
                                <phase>initialize</phase>
                                <configuration>
                                    <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/docker</directory>
                                            <includes>
                                                <include>Dockerfile</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-config</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals><!-- here the phase you need -->
                                <phase>generate-resources</phase>
                                <configuration>
                                    <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/config</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>*.properties</include>
                                                <include>*.props</include>
                                                <include>*.sql</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-script</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals><!-- here the phase you need -->
                                <phase>generate-resources</phase>
                                <configuration>
                                    <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/bin</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>*.sh</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-jar</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals><!-- here the phase you need -->
                                <phase>package</phase>
                                <configuration>
                                    <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/lib</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/target</directory>
                                            <includes>
                                                <include>${sdnc.gra.jar}</include>
                                            </includes>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.28.0</version>
                        <inherited>false</inherited>
                        <configuration>
                            <images>
                                <image>
                                    <name>${image.name}</name>
                                    <build>
                                        <cleanup>try</cleanup>
                                        <dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
                                        <dockerFile>Dockerfile</dockerFile>
                                        <tags>
                                            <tag>${project.docker.latestminortag.version}</tag>
                                            <tag>${project.docker.latestfulltag.version}</tag>
                                            <tag>${project.docker.latesttagtimestamp.version}</tag>
                                        </tags>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-images</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>push-images</id>
                                <phase>${docker.push.phase}</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
